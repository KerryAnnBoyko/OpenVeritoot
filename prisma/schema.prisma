generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrator {
  id          Int         @id @default(autoincrement())
  login       String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  backupEmail String
  authority   authority[]
  contact     contact?    @relation(fields: [contactId], references: [id])
  contactId   Int?
}

model authority {
  id                           Int                            @id @default(autoincrement())
  organizationName             String
  organizationDescription      String?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  authorizedActiveUntil        DateTime                       @default(dbgenerated("NOW() + interval '1 year'"))
  address                      String?
  notes                        String?
  createdBy                    administrator                  @relation(fields: [createdByAdministratorId], references: [id])
  createdByAdministratorId     Int
  verifications                verification[]
  verificationsOnSocialAccount verificationsOnSocialAccount[]
  contacts                     contact[]
  socialAccount                socialAccount[]
  identity                     identity[]
  verificationsOnIdentity      verificationsOnIdentity[]
}

model contact {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String?
  phone         String?
  text          String?
  notes         String?
  authority     authority?      @relation(fields: [authorityId], references: [id])
  authorityId   Int?
  administrator administrator[]
  socialAccount socialAccount[]
}

model verification {
  id                      Int                            @id @default(autoincrement())
  createdAt               DateTime                       @default(now())
  updatedAt               DateTime                       @updatedAt
  name                    String                         @db.VarChar(255)
  description             String
  comments                String?
  authority               authority?                     @relation(fields: [authorityId], references: [id])
  authorityId             Int?
  socialAccounts          verificationsOnSocialAccount[]
  verificationsOnIdentity verificationsOnIdentity[]
}

model identity {
  id                      Int                       @id @default(autoincrement())
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  name                    String
  bio                     String?
  createdBy               authority                 @relation(fields: [createdByAuthorityId], references: [id])
  createdByAuthorityId    Int
  verificationsOnIdentity verificationsOnIdentity[]
  socialAccounts          socialAccount[]
}

model socialAccount {
  id                   Int                            @id @default(autoincrement())
  createdAt            DateTime                       @default(now())
  updatedAt            DateTime                       @updatedAt
  socialLogin          String                         @unique // forex: @carrieannecoder@twitter.com @kerryanncoder@tech.lgbt
  network              String                         @db.VarChar(255)
  createdBy            authority                      @relation(fields: [createdByAuthorityId], references: [id])
  createdByAuthorityId Int
  verifications        verificationsOnSocialAccount[]
  contact              contact?                       @relation(fields: [contactId], references: [id])
  contactId            Int?
  identity             identity?                      @relation(fields: [identityId], references: [id])
  identityId           Int?
}

model verificationsOnIdentity {
  verification   verification @relation(fields: [verificationId], references: [id])
  verificationId Int
  identity       identity     @relation(fields: [identityId], references: [id])
  identityId     Int
  assignedBy     authority    @relation(fields: [authorityId], references: [id])
  authorityId    Int
  assignedAt     DateTime     @default(now())

  @@id([verificationId, identityId, authorityId])
}

model verificationsOnSocialAccount {
  verification    verification  @relation(fields: [verificationId], references: [id])
  verificationId  Int
  socialAccount   socialAccount @relation(fields: [socialAccountId], references: [id])
  socialAccountId Int
  assignedBy      authority     @relation(fields: [authorityId], references: [id])
  authorityId     Int
  assignedAt      DateTime      @default(now())

  @@id([verificationId, socialAccountId, authorityId])
}
